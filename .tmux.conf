#-- base settings --#
set -g default-terminal "screen-256color"
set -g display-time 3000
set -g escape-time 0
set -g history-limit 65535
set -g base-index 1
set -g pane-base-index 1

#-- bindkeys --#
# prefix key (Ctrl+a)
set -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
# bind-key C-\ send-prefix

# split window
unbind-key '"'
bind - splitw -v # vertical split (prefix -)
unbind-key %
bind | splitw -h # horizontal split (prefix |)

bind-key s split-window -v
bind-key v split-window -h

# select pane
bind k selectp -U # above (prefix k)
bind j selectp -D # below (prefix j)
bind h selectp -L # left (prefix h)
bind l selectp -R # right (prefix l)

# resize pane
bind -r ^k resizep -U 5 # upward (prefix Ctrl+k)
bind -r ^j resizep -D 5 # downward (prefix Ctrl+j)
bind -r ^h resizep -L 5 # to the left (prefix Ctrl+h)
bind -r ^l resizep -R 5 # to the right (prefix Ctrl+l)

# swap pane
bind ^u swapp -U # swap with the previous pane (prefix Ctrl+u)
bind ^d swapp -D # swap with the next pane (prefix Ctrl+d)

# change window order
bind-key < swap-window -t -1
bind-key > swap-window -t +1

# toggle statusline
bind-key T set-option -g status

# for vim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n M-h                      if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j                      if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k                      if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l                      if-shell "$is_vim" "send-keys M-l"  "select-pane -R"

# misc
unbind-key \;
bind-key e lastp  # select the last pane (prefix e)
bind ^e last  # select the last window (prefix Ctrl+e)
unbind-key x
bind-key q confirm-before -p "kill-pane #P? (y/n)" kill-pane  # kill pane (prefix q)
unbind-key '&'
bind-key Q confirm-before -p "kill-window #W? (y/n)" kill-window  # kill window (prefix Q)

# copy mode
bind Escape copy-mode             # enter copy mode (prefix Escape)
bind ^p pasteb                    # paste buffer (prefix Ctrl+p)

# app
bind m command-prompt "splitw 'exec man %%'"           # man (prefix m)

# reload config (prefix R)
bind R source ~/.tmux.conf \; display "Tmux Configuration reloaded!"

#-- other stuff --#
set -g focus-events on
setw -g mode-keys vi
setw -g automatic-rename off

#-- statusbar --#
set -g status-interval 1
set -g status-keys emacs

#-- ui --#
set -g status-position               bottom
set -g status-justify                left
set -g status-left-length            50  # Default is 10
set -g status-right-length           50  # Default is 40
set -g mode-style                    fg=colour255,bg=colour241
set -g message-style                 fg=colour255,bg=colour236
set -g status-style                  fg=colour255,bg=colour241
set -g status-left-style             fg=colour255,bg=colour237
set -g status-right-style            fg=colour255,bg=colour237
set -g status-left                   ' ❐ #S  '
set -g status-right                  '#{?client_prefix, tmux  ,}#{?window_zoomed_flag, Zoomed in  ,}  #H  '
set -g window-status-separator       ''
set -g window-status-format          '#[fg=colour255]  #I #W  '
set -g window-status-current-format  '#[fg=colour255,bg=colour244,bold]  #W  #[default]#[fg=colour255]'
set -g pane-active-border-style      fg=colour241
set -g pane-border-style             fg=colour241
set -g pane-border-format            ' #{?pane_active,#[fg=colour166]●#[default],#{pane_index}} #{pane_current_command} '
set -g pane-border-status            bottom
set -g visual-activity               on
